{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","components/About.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","placeholder","role","onClick","toggleTheme","htmlFor","Textarea","useState","text","setText","heading","value","onChange","event","target","rows","onKeyDown","keyCode","console","log","newtxt","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","set1","Set","split","newText","Array","from","join","length","trim","Alert","style","height","alert","msg","About","myStyle","color","backgroundColor","myStyle2","Footer","App","setMode","setAlert","message","setTimeout","document","body","exact","path","component","status","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc450a37.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/About\">About</Link>\n                        </li>\n                        \n                    </ul>\n                    <form className=\"d-flex\">\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n                    </form>\n                    <div className={`form-check form-switch mx-1 text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleTheme}/>\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n","import React, { useState } from 'react'\nimport '/Users/pranav_patil/React-App/texteditor/src/App.css';\n\n\nexport default function Textarea(props) {\n\n    const handleUpClick = () => {\n        let newtxt = text.toUpperCase();\n        setText(newtxt);\n        props.showAlert(\"Text has been converted to UpperCase\", \"success\")\n    }\n    const handleLoClick = () => {\n        let newtxt = text.toLowerCase();\n        setText(newtxt);\n        props.showAlert(\"Text has been converted to LowerCase\", \"success\")\n    }\n    const handleClearClick = () => {\n\n        setText(\"\");\n        props.showAlert(\"Text has been cleared\", \"success\")\n    }\n    const handleRedundancy = () => {\n        let set1 = new Set(text.split(\" \"));\n        let newText = Array.from(set1).join(\" \");\n        setText(newText);\n        props.showAlert(\"Unwanted spaces has been removed\", \"success\")\n    }\n    const handleCopyClick = () => {\n\n        navigator.clipboard.writeText(text);\n        props.showAlert(\"Text has been coppied to clipboard\", \"success\")\n\n    }\n\n    // handling on change\n    const handleOnChange = (event) => {\n        setText(event.target.value);\n    }\n\n    const keypress = (event) => {\n        var x = event.keyCode;\n        \n        if (x === 13) {  \n            \n            \n            console.log(\"You pressed the Enter key!\");\n        }\n    }\n\n        const [text, setText] = useState('Enter text here...');\n\n        return (\n            <>\n                <div className={`container text-${props.mode === 'light' ? 'dark' : 'light'}`}>\n                    <div className=\"mb-3 mt-3\">\n                        <h3>{props.heading}</h3>\n                        <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"txtbox\" rows=\"8\" onKeyDown={keypress}></textarea>\n                    </div>\n                    <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n                    <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n                    <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear</button>\n                    <button className=\"btn btn-primary mx-1\" onClick={handleCopyClick}>Copy Text</button>\n                    <button className=\"btn btn-primary mx-1\" onClick={handleRedundancy}>Remove Unwanted Space</button>\n                </div>\n                <div className={`container text-${props.mode === 'light' ? 'dark' : 'light'}`}>\n                    <h3 className=\"mt-2\">Text Summary</h3>\n                    <p><strong>{text.length > 0 ? text.trim().split(\" \").length : 0}</strong> words | <strong>{text.length}</strong> characters</p>\n                    <p><strong>{0.008 * (text.length > 0 ? text.trim().split(\" \").length : 0)}</strong> Minutes read</p>\n                    <h3 className=\"mt-2\">Preview</h3>\n                    <p className={`border border-${props.mode === 'light' ? 'dark' : 'light'} bg-${props.mode}`}>{text}</p>\n\n                </div>\n            </>\n        )\n    }\n\n","import React from 'react'\n\nexport default function Alert(props) {\n    return (\n        <div style={{height: '50px'}}>\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{props.alert.type}</strong>: {props.alert.msg}\n            </div>}\n        </div>    \n    )\n}\n","import React from 'react'\n\nexport default function About(props) {\n\n    // const [myStyle, setMyStyle] = useState({\n    //     color: 'black',\n    //     backgroundColor: 'white'\n    // }) \n    let myStyle = {\n        color: props.mode === 'dark' ? 'white' : 'black',\n        backgroundColor: props.mode === 'dark' ? '#5c5c5c' : '#d1d1d1',\n    }\n    let myStyle2 = {\n        color: props.mode === 'dark' ? 'black' : 'black',\n        backgroundColor: props.mode === 'dark' ? '#cfcfcf' : '#ffffff',\n    }\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>About Us</h1>\n            <div className=\"accordion\" id=\"accordionExample\">\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\n                        <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                            <strong>Developed By </strong>\n                        </button>\n                    </h2>\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={myStyle2}>\n                            <strong>Pranav Patil</strong>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                            <strong>Free to use </strong>\n                        </button>\n                    </h2>\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={myStyle2}>\n                            TextEditor is a free character counter tool that provides instant character count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\n                        <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                            <strong>Browser Compatible </strong>\n                        </button>\n                    </h2>\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                        <div className=\"accordion-body\" style={myStyle2}>\n                            This word counter software works in any web browsers such as Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <div>\n\n            \n\n        </div>\n    )\n}\n","\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport Textarea from './components/Textarea';\nimport Alert from './components/Alert';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  \n} from \"react-router-dom\";\nimport About from './components/About';\nimport Footer from './components/Footer';\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n  // Theme toggle\n  const toggleTheme = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      document.body.style.backgroundColor = \"#b5b5b5\";\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n    else {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#1a333d\";\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n  }\n\n\n\n  return (\n    <>\n      <Router>\n      <Navbar title='TextEditor' mode={mode} toggleTheme={toggleTheme} />\n      <Alert alert={alert} />\n      <div className='container'>\n        <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\">\n            <Textarea heading='Enter the text to start editing...' mode={mode} showAlert={showAlert} />\n          </Route>\n          <Route component=\"{NotFound}\" status = {404}></Route>\n        </Switch>\n\n      </div>\n      </Router>\n      <Footer/>\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}